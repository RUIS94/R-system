@using InternalUI.Models

<div class="suppliers-list">
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var supplier in Suppliers)
            {
                <tr>
                    <td>@supplier.Id</td>
                    <td>@supplier.Name</td>
                    <td>@supplier.Price.ToString("C2")</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination">
        <button class="btn btn-secondary" @onclick="PreviousPage" disabled="@(CurrentPage <= 1)">Previous</button>
        <span class="mx-2">Page @CurrentPage of @TotalPages</span>
        <button class="btn btn-secondary" @onclick="NextPage" disabled="@(CurrentPage >= TotalPages)">Next</button>
    </div>
</div>

<style>
    .suppliers-list {
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        overflow: hidden;
    }

    .table {
        width: 100%;
        margin-bottom: 0;
    }

    .table th,
    .table td {
        padding: 0.75rem;
        vertical-align: top;
        border-top: 1px solid #dee2e6;
    }

    .table thead th {
        vertical-align: bottom;
        border-bottom: 2px solid #dee2e6;
        background-color: #f8f9fa;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1rem;
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
    }

    .btn {
        padding: 0.375rem 0.75rem;
        border-radius: 0.25rem;
        cursor: pointer;
    }

    .btn-secondary {
        color: #fff;
        background-color: #6c757d;
        border: 1px solid #6c757d;
    }

    .btn-secondary:disabled {
        opacity: 0.65;
        cursor: not-allowed;
    }

    .mx-2 {
        margin-left: 0.5rem;
        margin-right: 0.5rem;
    }
</style>

@code {
    private int CurrentPage { get; set; } = 1;
    private int TotalPages { get; set; } = 1;
    private List<Supplier> Suppliers { get; set; } = new();

    private class Supplier
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public decimal Price { get; set; }
    }

    protected override void OnInitialized()
    {
        LoadSuppliers();
    }

    private void LoadSuppliers()
    {
        // TODO: Implement actual data loading
        // This is just sample data
        Suppliers = new List<Supplier>
        {
            new Supplier { Id = 1, Name = "Supplier A", Price = 99.99m },
            new Supplier { Id = 2, Name = "Supplier B", Price = 149.99m },
            new Supplier { Id = 3, Name = "Supplier C", Price = 199.99m }
        };
        TotalPages = 1; // TODO: Calculate based on total items
    }

    private void PreviousPage()
    {
        if (CurrentPage > 1)
        {
            CurrentPage--;
            LoadSuppliers();
        }
    }

    private void NextPage()
    {
        if (CurrentPage < TotalPages)
        {
            CurrentPage++;
            LoadSuppliers();
        }
    }
} 