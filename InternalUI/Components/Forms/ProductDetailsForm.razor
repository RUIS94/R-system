@using InternalUI.Models

<div class="product-details-form">
    <div class="form-group">
        <label>Barcode</label>
        <input type="text" class="form-control" placeholder="Enter barcode" @bind="Barcode" />
    </div>
    
    <div class="form-group">
        <label>Description</label>
        <textarea class="form-control" placeholder="Enter product description" @bind="Description" rows="3"></textarea>
    </div>
    
    <div class="date-row">
        <div class="date-field">
            <label>Creation Date</label>
            <input type="text" class="form-control" value="@(CreationDate.HasValue ? CreationDate.Value.ToString("yyyy-MM-dd") : "")" readonly />
        </div>
        <div class="date-field">
            <label>Last Update</label>
            <input type="text" class="form-control" value="@(LastUpdate.HasValue ? LastUpdate.Value.ToString("yyyy-MM-dd") : "")" readonly />
        </div>
    </div>
</div>

<style>
    .product-details-form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .date-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        align-items: start;
    }

    .date-field {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .form-group label,
    .date-field label {
        font-weight: 500;
        color: #333;
    }

    .form-control {
        padding: 0.5rem;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
    }

    .form-control:focus {
        border-color: #80bdff;
        outline: 0;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }

    .form-control[readonly] {
        background-color: #e9ecef;
        cursor: not-allowed;
    }

    textarea.form-control {
        resize: vertical;
        min-height: 100px;
    }
</style>

@code {
    private string Barcode { get; set; } = string.Empty;
    private string Description { get; set; } = string.Empty;
    private DateTime? CreationDate { get; set; }
    private DateTime? LastUpdate { get; set; }
} 